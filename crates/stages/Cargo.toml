[package]
name = "reth-stages"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
description = "Staged syncing primitives used in reth."

[package.metadata.cargo-udeps.ignore]
normal = [
    # Used for diagrams in docs
    "aquamarine",
]

[dependencies]
# reth
reth-primitives.workspace = true
reth-interfaces.workspace = true
reth-db.workspace = true
reth-codecs.workspace = true
reth-provider.workspace = true
reth-trie.workspace = true
reth-tokio-util.workspace = true

# revm
revm.workspace = true

# async
tokio = { workspace = true, features = ["sync"] }
tokio-stream.workspace = true
async-trait.workspace = true
futures-util.workspace = true
pin-project.workspace = true

# observability
tracing.workspace = true

# io
serde.workspace = true

# metrics
reth-metrics.workspace = true
metrics.workspace = true

# misc
thiserror.workspace = true
aquamarine.workspace = true
itertools.workspace = true
rayon.workspace = true
num-traits = "0.2.15"
auto_impl = "1"

[dev-dependencies]
# reth
reth-primitives = { workspace = true, features = ["test-utils", "arbitrary"] }
reth-db = { workspace = true, features = ["test-utils", "mdbx"] }
reth-interfaces = { workspace = true, features = ["test-utils"] }
reth-downloaders.workspace = true
reth-eth-wire.workspace = true # TODO(onbjerg): We only need this for [BlockBody]
reth-blockchain-tree.workspace = true
reth-revm.workspace = true
reth-trie = { workspace = true, features = ["test-utils"] }

alloy-rlp.workspace = true
itertools.workspace = true
tokio = { workspace = true, features = ["rt", "sync", "macros"] }
assert_matches.workspace = true
rand.workspace = true
paste = "1.0"

# Stage benchmarks
pprof = { workspace = true, features = ["flamegraph", "frame-pointer", "criterion"] }
criterion = { workspace = true, features = ["async_futures"] }

# io
serde_json.workspace = true

[features]
test-utils = ["reth-interfaces/test-utils", "reth-db/test-utils"]

[[bench]]
name = "criterion"
harness = false
required-features = ["test-utils"]
